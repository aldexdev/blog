"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-youtube";
exports.ids = ["vendor-chunks/react-youtube"];
exports.modules = {

/***/ "(ssr)/./node_modules/react-youtube/dist/YouTube.js":
/*!****************************************************!*\
  !*** ./node_modules/react-youtube/dist/YouTube.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\n\n// src/YouTube.tsx\nvar YouTube_exports = {};\n__export(YouTube_exports, {\n  default: () => YouTube_default\n});\nmodule.exports = __toCommonJS(YouTube_exports);\nvar import_prop_types = __toESM(__webpack_require__(/*! prop-types */ \"(ssr)/./node_modules/prop-types/index.js\"));\nvar import_react = __toESM(__webpack_require__(/*! react */ \"react?9fde\"));\nvar import_fast_deep_equal = __toESM(__webpack_require__(/*! fast-deep-equal */ \"(ssr)/./node_modules/fast-deep-equal/index.js\"));\nvar import_youtube_player = __toESM(__webpack_require__(/*! youtube-player */ \"(ssr)/./node_modules/youtube-player/dist/index.js\"));\nfunction shouldUpdateVideo(prevProps, props) {\n  var _a, _b;\n  if (prevProps.videoId !== props.videoId) {\n    return true;\n  }\n  const prevVars = ((_a = prevProps.opts) == null ? void 0 : _a.playerVars) || {};\n  const vars = ((_b = props.opts) == null ? void 0 : _b.playerVars) || {};\n  return prevVars.start !== vars.start || prevVars.end !== vars.end;\n}\nfunction filterResetOptions(opts = {}) {\n  return __spreadProps(__spreadValues({}, opts), {\n    height: 0,\n    width: 0,\n    playerVars: __spreadProps(__spreadValues({}, opts.playerVars), {\n      autoplay: 0,\n      start: 0,\n      end: 0\n    })\n  });\n}\nfunction shouldResetPlayer(prevProps, props) {\n  return prevProps.videoId !== props.videoId || !(0, import_fast_deep_equal.default)(filterResetOptions(prevProps.opts), filterResetOptions(props.opts));\n}\nfunction shouldUpdatePlayer(prevProps, props) {\n  var _a, _b, _c, _d;\n  return prevProps.id !== props.id || prevProps.className !== props.className || ((_a = prevProps.opts) == null ? void 0 : _a.width) !== ((_b = props.opts) == null ? void 0 : _b.width) || ((_c = prevProps.opts) == null ? void 0 : _c.height) !== ((_d = props.opts) == null ? void 0 : _d.height) || prevProps.iframeClassName !== props.iframeClassName || prevProps.title !== props.title;\n}\nvar defaultProps = {\n  videoId: \"\",\n  id: \"\",\n  className: \"\",\n  iframeClassName: \"\",\n  style: {},\n  title: \"\",\n  loading: void 0,\n  opts: {},\n  onReady: () => {\n  },\n  onError: () => {\n  },\n  onPlay: () => {\n  },\n  onPause: () => {\n  },\n  onEnd: () => {\n  },\n  onStateChange: () => {\n  },\n  onPlaybackRateChange: () => {\n  },\n  onPlaybackQualityChange: () => {\n  }\n};\nvar propTypes = {\n  videoId: import_prop_types.default.string,\n  id: import_prop_types.default.string,\n  className: import_prop_types.default.string,\n  iframeClassName: import_prop_types.default.string,\n  style: import_prop_types.default.object,\n  title: import_prop_types.default.string,\n  loading: import_prop_types.default.oneOf([\"lazy\", \"eager\"]),\n  opts: import_prop_types.default.objectOf(import_prop_types.default.any),\n  onReady: import_prop_types.default.func,\n  onError: import_prop_types.default.func,\n  onPlay: import_prop_types.default.func,\n  onPause: import_prop_types.default.func,\n  onEnd: import_prop_types.default.func,\n  onStateChange: import_prop_types.default.func,\n  onPlaybackRateChange: import_prop_types.default.func,\n  onPlaybackQualityChange: import_prop_types.default.func\n};\nvar _YouTube = class extends import_react.default.Component {\n  constructor(props) {\n    super(props);\n    this.destroyPlayerPromise = void 0;\n    this.onPlayerReady = (event) => {\n      var _a, _b;\n      return (_b = (_a = this.props).onReady) == null ? void 0 : _b.call(_a, event);\n    };\n    this.onPlayerError = (event) => {\n      var _a, _b;\n      return (_b = (_a = this.props).onError) == null ? void 0 : _b.call(_a, event);\n    };\n    this.onPlayerStateChange = (event) => {\n      var _a, _b, _c, _d, _e, _f, _g, _h;\n      (_b = (_a = this.props).onStateChange) == null ? void 0 : _b.call(_a, event);\n      switch (event.data) {\n        case _YouTube.PlayerState.ENDED:\n          (_d = (_c = this.props).onEnd) == null ? void 0 : _d.call(_c, event);\n          break;\n        case _YouTube.PlayerState.PLAYING:\n          (_f = (_e = this.props).onPlay) == null ? void 0 : _f.call(_e, event);\n          break;\n        case _YouTube.PlayerState.PAUSED:\n          (_h = (_g = this.props).onPause) == null ? void 0 : _h.call(_g, event);\n          break;\n        default:\n      }\n    };\n    this.onPlayerPlaybackRateChange = (event) => {\n      var _a, _b;\n      return (_b = (_a = this.props).onPlaybackRateChange) == null ? void 0 : _b.call(_a, event);\n    };\n    this.onPlayerPlaybackQualityChange = (event) => {\n      var _a, _b;\n      return (_b = (_a = this.props).onPlaybackQualityChange) == null ? void 0 : _b.call(_a, event);\n    };\n    this.destroyPlayer = () => {\n      if (this.internalPlayer) {\n        this.destroyPlayerPromise = this.internalPlayer.destroy().then(() => this.destroyPlayerPromise = void 0);\n        return this.destroyPlayerPromise;\n      }\n      return Promise.resolve();\n    };\n    this.createPlayer = () => {\n      if (typeof document === \"undefined\")\n        return;\n      if (this.destroyPlayerPromise) {\n        this.destroyPlayerPromise.then(this.createPlayer);\n        return;\n      }\n      const playerOpts = __spreadProps(__spreadValues({}, this.props.opts), {\n        videoId: this.props.videoId\n      });\n      this.internalPlayer = (0, import_youtube_player.default)(this.container, playerOpts);\n      this.internalPlayer.on(\"ready\", this.onPlayerReady);\n      this.internalPlayer.on(\"error\", this.onPlayerError);\n      this.internalPlayer.on(\"stateChange\", this.onPlayerStateChange);\n      this.internalPlayer.on(\"playbackRateChange\", this.onPlayerPlaybackRateChange);\n      this.internalPlayer.on(\"playbackQualityChange\", this.onPlayerPlaybackQualityChange);\n      if (this.props.title || this.props.loading) {\n        this.internalPlayer.getIframe().then((iframe) => {\n          if (this.props.title)\n            iframe.setAttribute(\"title\", this.props.title);\n          if (this.props.loading)\n            iframe.setAttribute(\"loading\", this.props.loading);\n        });\n      }\n    };\n    this.resetPlayer = () => this.destroyPlayer().then(this.createPlayer);\n    this.updatePlayer = () => {\n      var _a;\n      (_a = this.internalPlayer) == null ? void 0 : _a.getIframe().then((iframe) => {\n        if (this.props.id)\n          iframe.setAttribute(\"id\", this.props.id);\n        else\n          iframe.removeAttribute(\"id\");\n        if (this.props.iframeClassName)\n          iframe.setAttribute(\"class\", this.props.iframeClassName);\n        else\n          iframe.removeAttribute(\"class\");\n        if (this.props.opts && this.props.opts.width)\n          iframe.setAttribute(\"width\", this.props.opts.width.toString());\n        else\n          iframe.removeAttribute(\"width\");\n        if (this.props.opts && this.props.opts.height)\n          iframe.setAttribute(\"height\", this.props.opts.height.toString());\n        else\n          iframe.removeAttribute(\"height\");\n        if (this.props.title)\n          iframe.setAttribute(\"title\", this.props.title);\n        else\n          iframe.setAttribute(\"title\", \"YouTube video player\");\n        if (this.props.loading)\n          iframe.setAttribute(\"loading\", this.props.loading);\n        else\n          iframe.removeAttribute(\"loading\");\n      });\n    };\n    this.getInternalPlayer = () => {\n      return this.internalPlayer;\n    };\n    this.updateVideo = () => {\n      var _a, _b, _c, _d;\n      if (typeof this.props.videoId === \"undefined\" || this.props.videoId === null) {\n        (_a = this.internalPlayer) == null ? void 0 : _a.stopVideo();\n        return;\n      }\n      let autoplay = false;\n      const opts = {\n        videoId: this.props.videoId\n      };\n      if ((_b = this.props.opts) == null ? void 0 : _b.playerVars) {\n        autoplay = this.props.opts.playerVars.autoplay === 1;\n        if (\"start\" in this.props.opts.playerVars) {\n          opts.startSeconds = this.props.opts.playerVars.start;\n        }\n        if (\"end\" in this.props.opts.playerVars) {\n          opts.endSeconds = this.props.opts.playerVars.end;\n        }\n      }\n      if (autoplay) {\n        (_c = this.internalPlayer) == null ? void 0 : _c.loadVideoById(opts);\n        return;\n      }\n      (_d = this.internalPlayer) == null ? void 0 : _d.cueVideoById(opts);\n    };\n    this.refContainer = (container) => {\n      this.container = container;\n    };\n    this.container = null;\n    this.internalPlayer = null;\n  }\n  componentDidMount() {\n    this.createPlayer();\n  }\n  componentDidUpdate(prevProps) {\n    return __async(this, null, function* () {\n      if (shouldUpdatePlayer(prevProps, this.props)) {\n        this.updatePlayer();\n      }\n      if (shouldResetPlayer(prevProps, this.props)) {\n        yield this.resetPlayer();\n      }\n      if (shouldUpdateVideo(prevProps, this.props)) {\n        this.updateVideo();\n      }\n    });\n  }\n  componentWillUnmount() {\n    this.destroyPlayer();\n  }\n  render() {\n    return /* @__PURE__ */ import_react.default.createElement(\"div\", {\n      className: this.props.className,\n      style: this.props.style\n    }, /* @__PURE__ */ import_react.default.createElement(\"div\", {\n      id: this.props.id,\n      className: this.props.iframeClassName,\n      ref: this.refContainer\n    }));\n  }\n};\nvar YouTube = _YouTube;\nYouTube.propTypes = propTypes;\nYouTube.defaultProps = defaultProps;\nYouTube.PlayerState = {\n  UNSTARTED: -1,\n  ENDED: 0,\n  PLAYING: 1,\n  PAUSED: 2,\n  BUFFERING: 3,\n  CUED: 5\n};\nvar YouTube_default = YouTube;\n// Annotate the CommonJS export names for ESM import in node:\n0 && (0);\n//# sourceMappingURL=YouTube.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVhY3QteW91dHViZS9kaXN0L1lvdVR1YmUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhFQUE4RSw2REFBNkQ7QUFDM0k7QUFDQSwrQkFBK0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLGtDQUFrQztBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLDRGQUE0RjtBQUN6SDtBQUNBO0FBQ0E7QUFDQSxtR0FBbUc7QUFDbkcseUVBQXlFLDhCQUE4QjtBQUN2RztBQUNBO0FBQ0Esb0RBQW9ELGtCQUFrQixhQUFhO0FBQ25GO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSxnQ0FBZ0MsbUJBQU8sQ0FBQyw0REFBWTtBQUNwRCwyQkFBMkIsbUJBQU8sQ0FBQyx5QkFBTztBQUMxQyxxQ0FBcUMsbUJBQU8sQ0FBQyxzRUFBaUI7QUFDOUQsb0NBQW9DLG1CQUFPLENBQUMseUVBQWdCO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQztBQUNyQyx3Q0FBd0M7QUFDeEM7QUFDQTtBQUNBLCtDQUErQztBQUMvQztBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQSxHQUFHO0FBQ0g7QUFDQSxHQUFHO0FBQ0g7QUFDQSxHQUFHO0FBQ0g7QUFDQSxHQUFHO0FBQ0g7QUFDQSxHQUFHO0FBQ0g7QUFDQSxHQUFHO0FBQ0g7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdEQUF3RDtBQUN4RDtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0sQ0FBbUI7QUFDekIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hbGRleGRldi1ibG9nLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXlvdXR1YmUvZGlzdC9Zb3VUdWJlLmpzPzI1OTEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGUgPSBPYmplY3QuY3JlYXRlO1xudmFyIF9fZGVmUHJvcCA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcbnZhciBfX2RlZlByb3BzID0gT2JqZWN0LmRlZmluZVByb3BlcnRpZXM7XG52YXIgX19nZXRPd25Qcm9wRGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XG52YXIgX19nZXRPd25Qcm9wRGVzY3MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycztcbnZhciBfX2dldE93blByb3BOYW1lcyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzO1xudmFyIF9fZ2V0T3duUHJvcFN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xudmFyIF9fZ2V0UHJvdG9PZiA9IE9iamVjdC5nZXRQcm90b3R5cGVPZjtcbnZhciBfX2hhc093blByb3AgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xudmFyIF9fcHJvcElzRW51bSA9IE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGU7XG52YXIgX19kZWZOb3JtYWxQcm9wID0gKG9iaiwga2V5LCB2YWx1ZSkgPT4ga2V5IGluIG9iaiA/IF9fZGVmUHJvcChvYmosIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlLCB2YWx1ZSB9KSA6IG9ialtrZXldID0gdmFsdWU7XG52YXIgX19zcHJlYWRWYWx1ZXMgPSAoYSwgYikgPT4ge1xuICBmb3IgKHZhciBwcm9wIGluIGIgfHwgKGIgPSB7fSkpXG4gICAgaWYgKF9faGFzT3duUHJvcC5jYWxsKGIsIHByb3ApKVxuICAgICAgX19kZWZOb3JtYWxQcm9wKGEsIHByb3AsIGJbcHJvcF0pO1xuICBpZiAoX19nZXRPd25Qcm9wU3ltYm9scylcbiAgICBmb3IgKHZhciBwcm9wIG9mIF9fZ2V0T3duUHJvcFN5bWJvbHMoYikpIHtcbiAgICAgIGlmIChfX3Byb3BJc0VudW0uY2FsbChiLCBwcm9wKSlcbiAgICAgICAgX19kZWZOb3JtYWxQcm9wKGEsIHByb3AsIGJbcHJvcF0pO1xuICAgIH1cbiAgcmV0dXJuIGE7XG59O1xudmFyIF9fc3ByZWFkUHJvcHMgPSAoYSwgYikgPT4gX19kZWZQcm9wcyhhLCBfX2dldE93blByb3BEZXNjcyhiKSk7XG52YXIgX19leHBvcnQgPSAodGFyZ2V0LCBhbGwpID0+IHtcbiAgZm9yICh2YXIgbmFtZSBpbiBhbGwpXG4gICAgX19kZWZQcm9wKHRhcmdldCwgbmFtZSwgeyBnZXQ6IGFsbFtuYW1lXSwgZW51bWVyYWJsZTogdHJ1ZSB9KTtcbn07XG52YXIgX19jb3B5UHJvcHMgPSAodG8sIGZyb20sIGV4Y2VwdCwgZGVzYykgPT4ge1xuICBpZiAoZnJvbSAmJiB0eXBlb2YgZnJvbSA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgZnJvbSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgZm9yIChsZXQga2V5IG9mIF9fZ2V0T3duUHJvcE5hbWVzKGZyb20pKVxuICAgICAgaWYgKCFfX2hhc093blByb3AuY2FsbCh0bywga2V5KSAmJiBrZXkgIT09IGV4Y2VwdClcbiAgICAgICAgX19kZWZQcm9wKHRvLCBrZXksIHsgZ2V0OiAoKSA9PiBmcm9tW2tleV0sIGVudW1lcmFibGU6ICEoZGVzYyA9IF9fZ2V0T3duUHJvcERlc2MoZnJvbSwga2V5KSkgfHwgZGVzYy5lbnVtZXJhYmxlIH0pO1xuICB9XG4gIHJldHVybiB0bztcbn07XG52YXIgX190b0VTTSA9IChtb2QsIGlzTm9kZU1vZGUsIHRhcmdldCkgPT4gKHRhcmdldCA9IG1vZCAhPSBudWxsID8gX19jcmVhdGUoX19nZXRQcm90b09mKG1vZCkpIDoge30sIF9fY29weVByb3BzKFxuICBpc05vZGVNb2RlIHx8ICFtb2QgfHwgIW1vZC5fX2VzTW9kdWxlID8gX19kZWZQcm9wKHRhcmdldCwgXCJkZWZhdWx0XCIsIHsgdmFsdWU6IG1vZCwgZW51bWVyYWJsZTogdHJ1ZSB9KSA6IHRhcmdldCxcbiAgbW9kXG4pKTtcbnZhciBfX3RvQ29tbW9uSlMgPSAobW9kKSA9PiBfX2NvcHlQcm9wcyhfX2RlZlByb3Aoe30sIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pLCBtb2QpO1xudmFyIF9fYXN5bmMgPSAoX190aGlzLCBfX2FyZ3VtZW50cywgZ2VuZXJhdG9yKSA9PiB7XG4gIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgdmFyIGZ1bGZpbGxlZCA9ICh2YWx1ZSkgPT4ge1xuICAgICAgdHJ5IHtcbiAgICAgICAgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICByZWplY3QoZSk7XG4gICAgICB9XG4gICAgfTtcbiAgICB2YXIgcmVqZWN0ZWQgPSAodmFsdWUpID0+IHtcbiAgICAgIHRyeSB7XG4gICAgICAgIHN0ZXAoZ2VuZXJhdG9yLnRocm93KHZhbHVlKSk7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIHJlamVjdChlKTtcbiAgICAgIH1cbiAgICB9O1xuICAgIHZhciBzdGVwID0gKHgpID0+IHguZG9uZSA/IHJlc29sdmUoeC52YWx1ZSkgOiBQcm9taXNlLnJlc29sdmUoeC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTtcbiAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkoX190aGlzLCBfX2FyZ3VtZW50cykpLm5leHQoKSk7XG4gIH0pO1xufTtcblxuLy8gc3JjL1lvdVR1YmUudHN4XG52YXIgWW91VHViZV9leHBvcnRzID0ge307XG5fX2V4cG9ydChZb3VUdWJlX2V4cG9ydHMsIHtcbiAgZGVmYXVsdDogKCkgPT4gWW91VHViZV9kZWZhdWx0XG59KTtcbm1vZHVsZS5leHBvcnRzID0gX190b0NvbW1vbkpTKFlvdVR1YmVfZXhwb3J0cyk7XG52YXIgaW1wb3J0X3Byb3BfdHlwZXMgPSBfX3RvRVNNKHJlcXVpcmUoXCJwcm9wLXR5cGVzXCIpKTtcbnZhciBpbXBvcnRfcmVhY3QgPSBfX3RvRVNNKHJlcXVpcmUoXCJyZWFjdFwiKSk7XG52YXIgaW1wb3J0X2Zhc3RfZGVlcF9lcXVhbCA9IF9fdG9FU00ocmVxdWlyZShcImZhc3QtZGVlcC1lcXVhbFwiKSk7XG52YXIgaW1wb3J0X3lvdXR1YmVfcGxheWVyID0gX190b0VTTShyZXF1aXJlKFwieW91dHViZS1wbGF5ZXJcIikpO1xuZnVuY3Rpb24gc2hvdWxkVXBkYXRlVmlkZW8ocHJldlByb3BzLCBwcm9wcykge1xuICB2YXIgX2EsIF9iO1xuICBpZiAocHJldlByb3BzLnZpZGVvSWQgIT09IHByb3BzLnZpZGVvSWQpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuICBjb25zdCBwcmV2VmFycyA9ICgoX2EgPSBwcmV2UHJvcHMub3B0cykgPT0gbnVsbCA/IHZvaWQgMCA6IF9hLnBsYXllclZhcnMpIHx8IHt9O1xuICBjb25zdCB2YXJzID0gKChfYiA9IHByb3BzLm9wdHMpID09IG51bGwgPyB2b2lkIDAgOiBfYi5wbGF5ZXJWYXJzKSB8fCB7fTtcbiAgcmV0dXJuIHByZXZWYXJzLnN0YXJ0ICE9PSB2YXJzLnN0YXJ0IHx8IHByZXZWYXJzLmVuZCAhPT0gdmFycy5lbmQ7XG59XG5mdW5jdGlvbiBmaWx0ZXJSZXNldE9wdGlvbnMob3B0cyA9IHt9KSB7XG4gIHJldHVybiBfX3NwcmVhZFByb3BzKF9fc3ByZWFkVmFsdWVzKHt9LCBvcHRzKSwge1xuICAgIGhlaWdodDogMCxcbiAgICB3aWR0aDogMCxcbiAgICBwbGF5ZXJWYXJzOiBfX3NwcmVhZFByb3BzKF9fc3ByZWFkVmFsdWVzKHt9LCBvcHRzLnBsYXllclZhcnMpLCB7XG4gICAgICBhdXRvcGxheTogMCxcbiAgICAgIHN0YXJ0OiAwLFxuICAgICAgZW5kOiAwXG4gICAgfSlcbiAgfSk7XG59XG5mdW5jdGlvbiBzaG91bGRSZXNldFBsYXllcihwcmV2UHJvcHMsIHByb3BzKSB7XG4gIHJldHVybiBwcmV2UHJvcHMudmlkZW9JZCAhPT0gcHJvcHMudmlkZW9JZCB8fCAhKDAsIGltcG9ydF9mYXN0X2RlZXBfZXF1YWwuZGVmYXVsdCkoZmlsdGVyUmVzZXRPcHRpb25zKHByZXZQcm9wcy5vcHRzKSwgZmlsdGVyUmVzZXRPcHRpb25zKHByb3BzLm9wdHMpKTtcbn1cbmZ1bmN0aW9uIHNob3VsZFVwZGF0ZVBsYXllcihwcmV2UHJvcHMsIHByb3BzKSB7XG4gIHZhciBfYSwgX2IsIF9jLCBfZDtcbiAgcmV0dXJuIHByZXZQcm9wcy5pZCAhPT0gcHJvcHMuaWQgfHwgcHJldlByb3BzLmNsYXNzTmFtZSAhPT0gcHJvcHMuY2xhc3NOYW1lIHx8ICgoX2EgPSBwcmV2UHJvcHMub3B0cykgPT0gbnVsbCA/IHZvaWQgMCA6IF9hLndpZHRoKSAhPT0gKChfYiA9IHByb3BzLm9wdHMpID09IG51bGwgPyB2b2lkIDAgOiBfYi53aWR0aCkgfHwgKChfYyA9IHByZXZQcm9wcy5vcHRzKSA9PSBudWxsID8gdm9pZCAwIDogX2MuaGVpZ2h0KSAhPT0gKChfZCA9IHByb3BzLm9wdHMpID09IG51bGwgPyB2b2lkIDAgOiBfZC5oZWlnaHQpIHx8IHByZXZQcm9wcy5pZnJhbWVDbGFzc05hbWUgIT09IHByb3BzLmlmcmFtZUNsYXNzTmFtZSB8fCBwcmV2UHJvcHMudGl0bGUgIT09IHByb3BzLnRpdGxlO1xufVxudmFyIGRlZmF1bHRQcm9wcyA9IHtcbiAgdmlkZW9JZDogXCJcIixcbiAgaWQ6IFwiXCIsXG4gIGNsYXNzTmFtZTogXCJcIixcbiAgaWZyYW1lQ2xhc3NOYW1lOiBcIlwiLFxuICBzdHlsZToge30sXG4gIHRpdGxlOiBcIlwiLFxuICBsb2FkaW5nOiB2b2lkIDAsXG4gIG9wdHM6IHt9LFxuICBvblJlYWR5OiAoKSA9PiB7XG4gIH0sXG4gIG9uRXJyb3I6ICgpID0+IHtcbiAgfSxcbiAgb25QbGF5OiAoKSA9PiB7XG4gIH0sXG4gIG9uUGF1c2U6ICgpID0+IHtcbiAgfSxcbiAgb25FbmQ6ICgpID0+IHtcbiAgfSxcbiAgb25TdGF0ZUNoYW5nZTogKCkgPT4ge1xuICB9LFxuICBvblBsYXliYWNrUmF0ZUNoYW5nZTogKCkgPT4ge1xuICB9LFxuICBvblBsYXliYWNrUXVhbGl0eUNoYW5nZTogKCkgPT4ge1xuICB9XG59O1xudmFyIHByb3BUeXBlcyA9IHtcbiAgdmlkZW9JZDogaW1wb3J0X3Byb3BfdHlwZXMuZGVmYXVsdC5zdHJpbmcsXG4gIGlkOiBpbXBvcnRfcHJvcF90eXBlcy5kZWZhdWx0LnN0cmluZyxcbiAgY2xhc3NOYW1lOiBpbXBvcnRfcHJvcF90eXBlcy5kZWZhdWx0LnN0cmluZyxcbiAgaWZyYW1lQ2xhc3NOYW1lOiBpbXBvcnRfcHJvcF90eXBlcy5kZWZhdWx0LnN0cmluZyxcbiAgc3R5bGU6IGltcG9ydF9wcm9wX3R5cGVzLmRlZmF1bHQub2JqZWN0LFxuICB0aXRsZTogaW1wb3J0X3Byb3BfdHlwZXMuZGVmYXVsdC5zdHJpbmcsXG4gIGxvYWRpbmc6IGltcG9ydF9wcm9wX3R5cGVzLmRlZmF1bHQub25lT2YoW1wibGF6eVwiLCBcImVhZ2VyXCJdKSxcbiAgb3B0czogaW1wb3J0X3Byb3BfdHlwZXMuZGVmYXVsdC5vYmplY3RPZihpbXBvcnRfcHJvcF90eXBlcy5kZWZhdWx0LmFueSksXG4gIG9uUmVhZHk6IGltcG9ydF9wcm9wX3R5cGVzLmRlZmF1bHQuZnVuYyxcbiAgb25FcnJvcjogaW1wb3J0X3Byb3BfdHlwZXMuZGVmYXVsdC5mdW5jLFxuICBvblBsYXk6IGltcG9ydF9wcm9wX3R5cGVzLmRlZmF1bHQuZnVuYyxcbiAgb25QYXVzZTogaW1wb3J0X3Byb3BfdHlwZXMuZGVmYXVsdC5mdW5jLFxuICBvbkVuZDogaW1wb3J0X3Byb3BfdHlwZXMuZGVmYXVsdC5mdW5jLFxuICBvblN0YXRlQ2hhbmdlOiBpbXBvcnRfcHJvcF90eXBlcy5kZWZhdWx0LmZ1bmMsXG4gIG9uUGxheWJhY2tSYXRlQ2hhbmdlOiBpbXBvcnRfcHJvcF90eXBlcy5kZWZhdWx0LmZ1bmMsXG4gIG9uUGxheWJhY2tRdWFsaXR5Q2hhbmdlOiBpbXBvcnRfcHJvcF90eXBlcy5kZWZhdWx0LmZ1bmNcbn07XG52YXIgX1lvdVR1YmUgPSBjbGFzcyBleHRlbmRzIGltcG9ydF9yZWFjdC5kZWZhdWx0LkNvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpO1xuICAgIHRoaXMuZGVzdHJveVBsYXllclByb21pc2UgPSB2b2lkIDA7XG4gICAgdGhpcy5vblBsYXllclJlYWR5ID0gKGV2ZW50KSA9PiB7XG4gICAgICB2YXIgX2EsIF9iO1xuICAgICAgcmV0dXJuIChfYiA9IChfYSA9IHRoaXMucHJvcHMpLm9uUmVhZHkpID09IG51bGwgPyB2b2lkIDAgOiBfYi5jYWxsKF9hLCBldmVudCk7XG4gICAgfTtcbiAgICB0aGlzLm9uUGxheWVyRXJyb3IgPSAoZXZlbnQpID0+IHtcbiAgICAgIHZhciBfYSwgX2I7XG4gICAgICByZXR1cm4gKF9iID0gKF9hID0gdGhpcy5wcm9wcykub25FcnJvcikgPT0gbnVsbCA/IHZvaWQgMCA6IF9iLmNhbGwoX2EsIGV2ZW50KTtcbiAgICB9O1xuICAgIHRoaXMub25QbGF5ZXJTdGF0ZUNoYW5nZSA9IChldmVudCkgPT4ge1xuICAgICAgdmFyIF9hLCBfYiwgX2MsIF9kLCBfZSwgX2YsIF9nLCBfaDtcbiAgICAgIChfYiA9IChfYSA9IHRoaXMucHJvcHMpLm9uU3RhdGVDaGFuZ2UpID09IG51bGwgPyB2b2lkIDAgOiBfYi5jYWxsKF9hLCBldmVudCk7XG4gICAgICBzd2l0Y2ggKGV2ZW50LmRhdGEpIHtcbiAgICAgICAgY2FzZSBfWW91VHViZS5QbGF5ZXJTdGF0ZS5FTkRFRDpcbiAgICAgICAgICAoX2QgPSAoX2MgPSB0aGlzLnByb3BzKS5vbkVuZCkgPT0gbnVsbCA/IHZvaWQgMCA6IF9kLmNhbGwoX2MsIGV2ZW50KTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBfWW91VHViZS5QbGF5ZXJTdGF0ZS5QTEFZSU5HOlxuICAgICAgICAgIChfZiA9IChfZSA9IHRoaXMucHJvcHMpLm9uUGxheSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9mLmNhbGwoX2UsIGV2ZW50KTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBfWW91VHViZS5QbGF5ZXJTdGF0ZS5QQVVTRUQ6XG4gICAgICAgICAgKF9oID0gKF9nID0gdGhpcy5wcm9wcykub25QYXVzZSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9oLmNhbGwoX2csIGV2ZW50KTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgIH1cbiAgICB9O1xuICAgIHRoaXMub25QbGF5ZXJQbGF5YmFja1JhdGVDaGFuZ2UgPSAoZXZlbnQpID0+IHtcbiAgICAgIHZhciBfYSwgX2I7XG4gICAgICByZXR1cm4gKF9iID0gKF9hID0gdGhpcy5wcm9wcykub25QbGF5YmFja1JhdGVDaGFuZ2UpID09IG51bGwgPyB2b2lkIDAgOiBfYi5jYWxsKF9hLCBldmVudCk7XG4gICAgfTtcbiAgICB0aGlzLm9uUGxheWVyUGxheWJhY2tRdWFsaXR5Q2hhbmdlID0gKGV2ZW50KSA9PiB7XG4gICAgICB2YXIgX2EsIF9iO1xuICAgICAgcmV0dXJuIChfYiA9IChfYSA9IHRoaXMucHJvcHMpLm9uUGxheWJhY2tRdWFsaXR5Q2hhbmdlKSA9PSBudWxsID8gdm9pZCAwIDogX2IuY2FsbChfYSwgZXZlbnQpO1xuICAgIH07XG4gICAgdGhpcy5kZXN0cm95UGxheWVyID0gKCkgPT4ge1xuICAgICAgaWYgKHRoaXMuaW50ZXJuYWxQbGF5ZXIpIHtcbiAgICAgICAgdGhpcy5kZXN0cm95UGxheWVyUHJvbWlzZSA9IHRoaXMuaW50ZXJuYWxQbGF5ZXIuZGVzdHJveSgpLnRoZW4oKCkgPT4gdGhpcy5kZXN0cm95UGxheWVyUHJvbWlzZSA9IHZvaWQgMCk7XG4gICAgICAgIHJldHVybiB0aGlzLmRlc3Ryb3lQbGF5ZXJQcm9taXNlO1xuICAgICAgfVxuICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpO1xuICAgIH07XG4gICAgdGhpcy5jcmVhdGVQbGF5ZXIgPSAoKSA9PiB7XG4gICAgICBpZiAodHlwZW9mIGRvY3VtZW50ID09PSBcInVuZGVmaW5lZFwiKVxuICAgICAgICByZXR1cm47XG4gICAgICBpZiAodGhpcy5kZXN0cm95UGxheWVyUHJvbWlzZSkge1xuICAgICAgICB0aGlzLmRlc3Ryb3lQbGF5ZXJQcm9taXNlLnRoZW4odGhpcy5jcmVhdGVQbGF5ZXIpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBjb25zdCBwbGF5ZXJPcHRzID0gX19zcHJlYWRQcm9wcyhfX3NwcmVhZFZhbHVlcyh7fSwgdGhpcy5wcm9wcy5vcHRzKSwge1xuICAgICAgICB2aWRlb0lkOiB0aGlzLnByb3BzLnZpZGVvSWRcbiAgICAgIH0pO1xuICAgICAgdGhpcy5pbnRlcm5hbFBsYXllciA9ICgwLCBpbXBvcnRfeW91dHViZV9wbGF5ZXIuZGVmYXVsdCkodGhpcy5jb250YWluZXIsIHBsYXllck9wdHMpO1xuICAgICAgdGhpcy5pbnRlcm5hbFBsYXllci5vbihcInJlYWR5XCIsIHRoaXMub25QbGF5ZXJSZWFkeSk7XG4gICAgICB0aGlzLmludGVybmFsUGxheWVyLm9uKFwiZXJyb3JcIiwgdGhpcy5vblBsYXllckVycm9yKTtcbiAgICAgIHRoaXMuaW50ZXJuYWxQbGF5ZXIub24oXCJzdGF0ZUNoYW5nZVwiLCB0aGlzLm9uUGxheWVyU3RhdGVDaGFuZ2UpO1xuICAgICAgdGhpcy5pbnRlcm5hbFBsYXllci5vbihcInBsYXliYWNrUmF0ZUNoYW5nZVwiLCB0aGlzLm9uUGxheWVyUGxheWJhY2tSYXRlQ2hhbmdlKTtcbiAgICAgIHRoaXMuaW50ZXJuYWxQbGF5ZXIub24oXCJwbGF5YmFja1F1YWxpdHlDaGFuZ2VcIiwgdGhpcy5vblBsYXllclBsYXliYWNrUXVhbGl0eUNoYW5nZSk7XG4gICAgICBpZiAodGhpcy5wcm9wcy50aXRsZSB8fCB0aGlzLnByb3BzLmxvYWRpbmcpIHtcbiAgICAgICAgdGhpcy5pbnRlcm5hbFBsYXllci5nZXRJZnJhbWUoKS50aGVuKChpZnJhbWUpID0+IHtcbiAgICAgICAgICBpZiAodGhpcy5wcm9wcy50aXRsZSlcbiAgICAgICAgICAgIGlmcmFtZS5zZXRBdHRyaWJ1dGUoXCJ0aXRsZVwiLCB0aGlzLnByb3BzLnRpdGxlKTtcbiAgICAgICAgICBpZiAodGhpcy5wcm9wcy5sb2FkaW5nKVxuICAgICAgICAgICAgaWZyYW1lLnNldEF0dHJpYnV0ZShcImxvYWRpbmdcIiwgdGhpcy5wcm9wcy5sb2FkaW5nKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfTtcbiAgICB0aGlzLnJlc2V0UGxheWVyID0gKCkgPT4gdGhpcy5kZXN0cm95UGxheWVyKCkudGhlbih0aGlzLmNyZWF0ZVBsYXllcik7XG4gICAgdGhpcy51cGRhdGVQbGF5ZXIgPSAoKSA9PiB7XG4gICAgICB2YXIgX2E7XG4gICAgICAoX2EgPSB0aGlzLmludGVybmFsUGxheWVyKSA9PSBudWxsID8gdm9pZCAwIDogX2EuZ2V0SWZyYW1lKCkudGhlbigoaWZyYW1lKSA9PiB7XG4gICAgICAgIGlmICh0aGlzLnByb3BzLmlkKVxuICAgICAgICAgIGlmcmFtZS5zZXRBdHRyaWJ1dGUoXCJpZFwiLCB0aGlzLnByb3BzLmlkKTtcbiAgICAgICAgZWxzZVxuICAgICAgICAgIGlmcmFtZS5yZW1vdmVBdHRyaWJ1dGUoXCJpZFwiKTtcbiAgICAgICAgaWYgKHRoaXMucHJvcHMuaWZyYW1lQ2xhc3NOYW1lKVxuICAgICAgICAgIGlmcmFtZS5zZXRBdHRyaWJ1dGUoXCJjbGFzc1wiLCB0aGlzLnByb3BzLmlmcmFtZUNsYXNzTmFtZSk7XG4gICAgICAgIGVsc2VcbiAgICAgICAgICBpZnJhbWUucmVtb3ZlQXR0cmlidXRlKFwiY2xhc3NcIik7XG4gICAgICAgIGlmICh0aGlzLnByb3BzLm9wdHMgJiYgdGhpcy5wcm9wcy5vcHRzLndpZHRoKVxuICAgICAgICAgIGlmcmFtZS5zZXRBdHRyaWJ1dGUoXCJ3aWR0aFwiLCB0aGlzLnByb3BzLm9wdHMud2lkdGgudG9TdHJpbmcoKSk7XG4gICAgICAgIGVsc2VcbiAgICAgICAgICBpZnJhbWUucmVtb3ZlQXR0cmlidXRlKFwid2lkdGhcIik7XG4gICAgICAgIGlmICh0aGlzLnByb3BzLm9wdHMgJiYgdGhpcy5wcm9wcy5vcHRzLmhlaWdodClcbiAgICAgICAgICBpZnJhbWUuc2V0QXR0cmlidXRlKFwiaGVpZ2h0XCIsIHRoaXMucHJvcHMub3B0cy5oZWlnaHQudG9TdHJpbmcoKSk7XG4gICAgICAgIGVsc2VcbiAgICAgICAgICBpZnJhbWUucmVtb3ZlQXR0cmlidXRlKFwiaGVpZ2h0XCIpO1xuICAgICAgICBpZiAodGhpcy5wcm9wcy50aXRsZSlcbiAgICAgICAgICBpZnJhbWUuc2V0QXR0cmlidXRlKFwidGl0bGVcIiwgdGhpcy5wcm9wcy50aXRsZSk7XG4gICAgICAgIGVsc2VcbiAgICAgICAgICBpZnJhbWUuc2V0QXR0cmlidXRlKFwidGl0bGVcIiwgXCJZb3VUdWJlIHZpZGVvIHBsYXllclwiKTtcbiAgICAgICAgaWYgKHRoaXMucHJvcHMubG9hZGluZylcbiAgICAgICAgICBpZnJhbWUuc2V0QXR0cmlidXRlKFwibG9hZGluZ1wiLCB0aGlzLnByb3BzLmxvYWRpbmcpO1xuICAgICAgICBlbHNlXG4gICAgICAgICAgaWZyYW1lLnJlbW92ZUF0dHJpYnV0ZShcImxvYWRpbmdcIik7XG4gICAgICB9KTtcbiAgICB9O1xuICAgIHRoaXMuZ2V0SW50ZXJuYWxQbGF5ZXIgPSAoKSA9PiB7XG4gICAgICByZXR1cm4gdGhpcy5pbnRlcm5hbFBsYXllcjtcbiAgICB9O1xuICAgIHRoaXMudXBkYXRlVmlkZW8gPSAoKSA9PiB7XG4gICAgICB2YXIgX2EsIF9iLCBfYywgX2Q7XG4gICAgICBpZiAodHlwZW9mIHRoaXMucHJvcHMudmlkZW9JZCA9PT0gXCJ1bmRlZmluZWRcIiB8fCB0aGlzLnByb3BzLnZpZGVvSWQgPT09IG51bGwpIHtcbiAgICAgICAgKF9hID0gdGhpcy5pbnRlcm5hbFBsYXllcikgPT0gbnVsbCA/IHZvaWQgMCA6IF9hLnN0b3BWaWRlbygpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBsZXQgYXV0b3BsYXkgPSBmYWxzZTtcbiAgICAgIGNvbnN0IG9wdHMgPSB7XG4gICAgICAgIHZpZGVvSWQ6IHRoaXMucHJvcHMudmlkZW9JZFxuICAgICAgfTtcbiAgICAgIGlmICgoX2IgPSB0aGlzLnByb3BzLm9wdHMpID09IG51bGwgPyB2b2lkIDAgOiBfYi5wbGF5ZXJWYXJzKSB7XG4gICAgICAgIGF1dG9wbGF5ID0gdGhpcy5wcm9wcy5vcHRzLnBsYXllclZhcnMuYXV0b3BsYXkgPT09IDE7XG4gICAgICAgIGlmIChcInN0YXJ0XCIgaW4gdGhpcy5wcm9wcy5vcHRzLnBsYXllclZhcnMpIHtcbiAgICAgICAgICBvcHRzLnN0YXJ0U2Vjb25kcyA9IHRoaXMucHJvcHMub3B0cy5wbGF5ZXJWYXJzLnN0YXJ0O1xuICAgICAgICB9XG4gICAgICAgIGlmIChcImVuZFwiIGluIHRoaXMucHJvcHMub3B0cy5wbGF5ZXJWYXJzKSB7XG4gICAgICAgICAgb3B0cy5lbmRTZWNvbmRzID0gdGhpcy5wcm9wcy5vcHRzLnBsYXllclZhcnMuZW5kO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoYXV0b3BsYXkpIHtcbiAgICAgICAgKF9jID0gdGhpcy5pbnRlcm5hbFBsYXllcikgPT0gbnVsbCA/IHZvaWQgMCA6IF9jLmxvYWRWaWRlb0J5SWQob3B0cyk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIChfZCA9IHRoaXMuaW50ZXJuYWxQbGF5ZXIpID09IG51bGwgPyB2b2lkIDAgOiBfZC5jdWVWaWRlb0J5SWQob3B0cyk7XG4gICAgfTtcbiAgICB0aGlzLnJlZkNvbnRhaW5lciA9IChjb250YWluZXIpID0+IHtcbiAgICAgIHRoaXMuY29udGFpbmVyID0gY29udGFpbmVyO1xuICAgIH07XG4gICAgdGhpcy5jb250YWluZXIgPSBudWxsO1xuICAgIHRoaXMuaW50ZXJuYWxQbGF5ZXIgPSBudWxsO1xuICB9XG4gIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIHRoaXMuY3JlYXRlUGxheWVyKCk7XG4gIH1cbiAgY29tcG9uZW50RGlkVXBkYXRlKHByZXZQcm9wcykge1xuICAgIHJldHVybiBfX2FzeW5jKHRoaXMsIG51bGwsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICBpZiAoc2hvdWxkVXBkYXRlUGxheWVyKHByZXZQcm9wcywgdGhpcy5wcm9wcykpIHtcbiAgICAgICAgdGhpcy51cGRhdGVQbGF5ZXIoKTtcbiAgICAgIH1cbiAgICAgIGlmIChzaG91bGRSZXNldFBsYXllcihwcmV2UHJvcHMsIHRoaXMucHJvcHMpKSB7XG4gICAgICAgIHlpZWxkIHRoaXMucmVzZXRQbGF5ZXIoKTtcbiAgICAgIH1cbiAgICAgIGlmIChzaG91bGRVcGRhdGVWaWRlbyhwcmV2UHJvcHMsIHRoaXMucHJvcHMpKSB7XG4gICAgICAgIHRoaXMudXBkYXRlVmlkZW8oKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuICBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICB0aGlzLmRlc3Ryb3lQbGF5ZXIoKTtcbiAgfVxuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBpbXBvcnRfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICAgIGNsYXNzTmFtZTogdGhpcy5wcm9wcy5jbGFzc05hbWUsXG4gICAgICBzdHlsZTogdGhpcy5wcm9wcy5zdHlsZVxuICAgIH0sIC8qIEBfX1BVUkVfXyAqLyBpbXBvcnRfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICAgIGlkOiB0aGlzLnByb3BzLmlkLFxuICAgICAgY2xhc3NOYW1lOiB0aGlzLnByb3BzLmlmcmFtZUNsYXNzTmFtZSxcbiAgICAgIHJlZjogdGhpcy5yZWZDb250YWluZXJcbiAgICB9KSk7XG4gIH1cbn07XG52YXIgWW91VHViZSA9IF9Zb3VUdWJlO1xuWW91VHViZS5wcm9wVHlwZXMgPSBwcm9wVHlwZXM7XG5Zb3VUdWJlLmRlZmF1bHRQcm9wcyA9IGRlZmF1bHRQcm9wcztcbllvdVR1YmUuUGxheWVyU3RhdGUgPSB7XG4gIFVOU1RBUlRFRDogLTEsXG4gIEVOREVEOiAwLFxuICBQTEFZSU5HOiAxLFxuICBQQVVTRUQ6IDIsXG4gIEJVRkZFUklORzogMyxcbiAgQ1VFRDogNVxufTtcbnZhciBZb3VUdWJlX2RlZmF1bHQgPSBZb3VUdWJlO1xuLy8gQW5ub3RhdGUgdGhlIENvbW1vbkpTIGV4cG9ydCBuYW1lcyBmb3IgRVNNIGltcG9ydCBpbiBub2RlOlxuMCAmJiAobW9kdWxlLmV4cG9ydHMgPSB7fSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Zb3VUdWJlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-youtube/dist/YouTube.js\n");

/***/ })

};
;