"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/queue";
exports.ids = ["vendor-chunks/queue"];
exports.modules = {

/***/ "(rsc)/./node_modules/queue/index.js":
/*!*************************************!*\
  !*** ./node_modules/queue/index.js ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar inherits = __webpack_require__(/*! inherits */ \"(rsc)/./node_modules/inherits/inherits.js\");\nvar EventEmitter = (__webpack_require__(/*! events */ \"events\").EventEmitter);\nmodule.exports = Queue;\nmodule.exports[\"default\"] = Queue;\nfunction Queue(options) {\n    if (!(this instanceof Queue)) {\n        return new Queue(options);\n    }\n    EventEmitter.call(this);\n    options = options || {};\n    this.concurrency = options.concurrency || Infinity;\n    this.timeout = options.timeout || 0;\n    this.autostart = options.autostart || false;\n    this.results = options.results || null;\n    this.pending = 0;\n    this.session = 0;\n    this.running = false;\n    this.jobs = [];\n    this.timers = {};\n}\ninherits(Queue, EventEmitter);\nvar arrayMethods = [\n    \"pop\",\n    \"shift\",\n    \"indexOf\",\n    \"lastIndexOf\"\n];\narrayMethods.forEach(function(method) {\n    Queue.prototype[method] = function() {\n        return Array.prototype[method].apply(this.jobs, arguments);\n    };\n});\nQueue.prototype.slice = function(begin, end) {\n    this.jobs = this.jobs.slice(begin, end);\n    return this;\n};\nQueue.prototype.reverse = function() {\n    this.jobs.reverse();\n    return this;\n};\nvar arrayAddMethods = [\n    \"push\",\n    \"unshift\",\n    \"splice\"\n];\narrayAddMethods.forEach(function(method) {\n    Queue.prototype[method] = function() {\n        var methodResult = Array.prototype[method].apply(this.jobs, arguments);\n        if (this.autostart) {\n            this.start();\n        }\n        return methodResult;\n    };\n});\nObject.defineProperty(Queue.prototype, \"length\", {\n    get: function() {\n        return this.pending + this.jobs.length;\n    }\n});\nQueue.prototype.start = function(cb) {\n    if (cb) {\n        callOnErrorOrEnd.call(this, cb);\n    }\n    this.running = true;\n    if (this.pending >= this.concurrency) {\n        return;\n    }\n    if (this.jobs.length === 0) {\n        if (this.pending === 0) {\n            done.call(this);\n        }\n        return;\n    }\n    var self = this;\n    var job = this.jobs.shift();\n    var once = true;\n    var session = this.session;\n    var timeoutId = null;\n    var didTimeout = false;\n    var resultIndex = null;\n    var timeout = job.hasOwnProperty(\"timeout\") ? job.timeout : this.timeout;\n    function next(err, result) {\n        if (once && self.session === session) {\n            once = false;\n            self.pending--;\n            if (timeoutId !== null) {\n                delete self.timers[timeoutId];\n                clearTimeout(timeoutId);\n            }\n            if (err) {\n                self.emit(\"error\", err, job);\n            } else if (didTimeout === false) {\n                if (resultIndex !== null) {\n                    self.results[resultIndex] = Array.prototype.slice.call(arguments, 1);\n                }\n                self.emit(\"success\", result, job);\n            }\n            if (self.session === session) {\n                if (self.pending === 0 && self.jobs.length === 0) {\n                    done.call(self);\n                } else if (self.running) {\n                    self.start();\n                }\n            }\n        }\n    }\n    if (timeout) {\n        timeoutId = setTimeout(function() {\n            didTimeout = true;\n            if (self.listeners(\"timeout\").length > 0) {\n                self.emit(\"timeout\", next, job);\n            } else {\n                next();\n            }\n        }, timeout);\n        this.timers[timeoutId] = timeoutId;\n    }\n    if (this.results) {\n        resultIndex = this.results.length;\n        this.results[resultIndex] = null;\n    }\n    this.pending++;\n    self.emit(\"start\", job);\n    var promise = job(next);\n    if (promise && promise.then && typeof promise.then === \"function\") {\n        promise.then(function(result) {\n            return next(null, result);\n        }).catch(function(err) {\n            return next(err || true);\n        });\n    }\n    if (this.running && this.jobs.length > 0) {\n        this.start();\n    }\n};\nQueue.prototype.stop = function() {\n    this.running = false;\n};\nQueue.prototype.end = function(err) {\n    clearTimers.call(this);\n    this.jobs.length = 0;\n    this.pending = 0;\n    done.call(this, err);\n};\nfunction clearTimers() {\n    for(var key in this.timers){\n        var timeoutId = this.timers[key];\n        delete this.timers[key];\n        clearTimeout(timeoutId);\n    }\n}\nfunction callOnErrorOrEnd(cb) {\n    var self = this;\n    this.on(\"error\", onerror);\n    this.on(\"end\", onend);\n    function onerror(err) {\n        self.end(err);\n    }\n    function onend(err) {\n        self.removeListener(\"error\", onerror);\n        self.removeListener(\"end\", onend);\n        cb(err, this.results);\n    }\n}\nfunction done(err) {\n    this.session++;\n    this.running = false;\n    this.emit(\"end\", err);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/queue/index.js\n");

/***/ })

};
;